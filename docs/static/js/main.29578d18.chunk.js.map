{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cast","type","value","onChange","target","ProTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExperApp","categorias","c","ReactDOM","render","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAO,GAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAK3C,SACI,uBACQC,KAAK,OACLC,MAAQT,EACRU,SAlBU,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,aAuB/BZ,EAAYe,SAAW,CACnBd,cAAec,IAASC,KAAKC,Y,mCC9BpBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGrC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAlBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAK,SAAAC,GACFC,YAAY,WACRJ,EAAS,CACTf,KAAMkB,EACNL,SAAQ,YAIrB,CAAEpB,IAQEqB,EDlB2BM,CAAc3B,GAAlCa,EANuB,EAM7BN,KAAca,EANe,EAMfA,QAEtB,OACI,qCACI,6BAAMpB,IAELoB,GAAW,wCAEZ,qBAAKJ,UAAU,YAAf,SAEUH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAESA,GADCA,EAAIC,aEYvBiB,EA/BK,WAAM,MAGc7C,mBAAS,CAAC,cAHxB,mBAGf8C,EAHe,KAGH/C,EAHG,KAWtB,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEQ+C,EAAWpB,KAAK,SAAAqB,GAAC,OACb,cAAC,EAAD,CAEI9B,SAAW8B,GADHA,Y,MCnBpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.29578d18.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport ProTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n\r\n        if ( inputValue.trim().length>2 ){\r\n            setCategorias( cast => [inputValue, ...cast]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.ProTypes = {\r\n    setCategorias: ProTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=4B1XRAhY3yJGm9PXsYfIMpJAmLXqe8qO`\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n    \r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url}) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n            <img src={ url } alt={ title }></img>\r\n            <p>{ title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    /* const [images, setimages] = useState([]);\r\n\r\n */\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            {loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n\r\n                    { images.map( img => \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    )}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import { getGifs } from '../helpers/getGifs';\r\nimport { useEffect, useState } from \"react\"\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then(imgs =>{\r\n                setTimeout( () =>{\r\n                    setstate({\r\n                    data: imgs,\r\n                    loading:false\r\n                    });\r\n                });\r\n            });\r\n    }, [ category ])\r\n\r\n/*     setTimeout( () => {\r\n        setstate({\r\n            data: [1,2,3,4,5,6,7,8],\r\n            loading: false\r\n        });\r\n    }, 3000) */\r\n    return state; //data, loading\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExperApp = () => {\r\n\r\n    //const categorias = ['One punch', 'Samurai X', 'Dragon ball'];\r\n    const [categorias, setCategorias] = useState(['One punch']);\r\n\r\n    /* const handleAdd = () => {\r\n        //setCategorias( [...categorias, 'HunterXHunter'] );\r\n        //setCategorias( ['HunterXHunter', ...categorias] );\r\n        setCategorias( cast => [...cast, 'HunterXHunter']);\r\n    } */\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr></hr>\r\n            <ol>\r\n                { \r\n                    categorias.map( c =>  \r\n                        <GifGrid \r\n                            key = { c }\r\n                            category={ c } \r\n                        />\r\n                        \r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExperApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExperApp from './GifExperApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExperApp />,\n  document.getElementById('root')\n);\n\n//GifExperApp\n//<h2>GifExperApp</h2>\n//<hr/>\n"],"sourceRoot":""}